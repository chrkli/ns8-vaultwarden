#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import socket
import json
import sys
import agent

config = {}

# Read current configuration from Redis
env =f'module/{os.environ["MODULE_ID"]}/environment'
rdb = agent.redis_connect()

config ["domain"] = rdb.hget(env, "TRAEFIK_HOST");
config ["path"] = rdb.hget(env, "TRAEFIK_PATH");
config ["orgname"] = rdb.hget(env, "OrgName");
config ["invitations"] = rdb.hget(env, "InvitationsEnabled") == "True";
config ["webvault"] = rdb.hget(env, "WebvaultEnabled") == "True";
config ["websocket"] = rdb.hget(env, "WebsocketEnabled") == "False";
config ["sends"] = rdb.hget(env, "SendsEnabled") == "True";
config ["emergencyaccess"] = rdb.hget(env, "EmergencyAccessEnabled") == "True";
config ["icondownload"] = rdb.hget(env, "IconDownloadEnabled") == "True";
config ["signups"] = rdb.hget(env, "SignupsEnabled") == "True";
config ["lets_encrypt"] = rdb.hget(env, "TRAEFIK_LETS_ENCRYPT") == "False";
config ["http2https"] = rdb.hget(env, "TRAEFIK_HTTP2HTTPS") == "True";

# find hostname of the node
config ["hostname"] = socket.gethostname();

# Dump the config to stdout
json.dump(config, fp=sys.stdout)
